/* Program : Pathfinder
Purpose : Design, implement and test a Java program, that creates a 10x10 grid, where 25% randomly chosen spaces are blocked, and have the program determine if there exists a unblocked route from space (0,0) to space (9,9). (Essential Computing 2023 Assignment)
Author: Kacper Leon Puzniak
Date: //2023 */

import java.util.Random;  // Import the Random class to generate random values.

public class Pathfinder {
    private int[][] grid;  // 2D array to represent the grid.
    private int gridSize;  // Size of the grid (10x10).

    public Pathfinder(int gridSize) {
        this.gridSize = gridSize;  // Initialize the grid size.
        this.grid = new int[gridSize][gridSize];  // Create a new 2D grid with the specified size.
        initializeGrid();  // Call a method to initialize the grid with blocked and unblocked spaces.
    }
    private void initializeGrid() {
        Random rand = new Random();  // Create a Random object for generating random numbers.
        for (int i = 0; i < gridSize; i++) {
            for (int j = 0; j < gridSize; j++) {
                // Randomly assign values to grid cells: 1 represents blocked, 0 represents unblocked.
                grid[i][j] = rand.nextDouble() <= 0.25 ? 1 : 0; // Make 25 blocked grids
            }
        }
    }

    public static void main(String[] args) {
        Pathfinder pathfinder = new Pathfinder(10);  // Create an instance of the Pathfinder class with a grid size of 10x10.
        System.out.println("Grid:");
        pathfinder.printGrid();  // Call a method to print the grid.
    }

    public void printGrid() {
        // Print the grid representation with symbols: "□" for unblocked and "X" for blocked.
        for (int i = 0; i < gridSize; i++) {
            for (int j = 0; j < gridSize; j++) {
                System.out.print(grid[i][j] == 0 ? "□" : "X");
                System.out.print(" ");
            }
            System.out.println(); // Make it print in their own lines
        }
    }
}
